openapi: 3.0.1
info:
  contact: {}
  title: Log services
  version: 3.9.3
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
          <p>The Record section enables the storing of records on the blockchain. A record is stored permanently: it cannot be changed,
          deleted, or modified by anyone and will be stored on the blockchain forever. Tatum supports storing data on the following blockchains:</p>
          <ul>
          <li>Binance Smart Chain (BSC)</li>
          <li>Ethereum</li>
          <li>Harmony</li>
          <li>Polygon(Matic)</li>
          <li>XinFin(XDC)</li>
          </ul>
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Record
paths:
  /v3/record:
    post:
      description: |
        <h4>2 credits per API call. Additional credits are debited based on the size of the stored data and the type of blockchain.</h4><br/>
        <p>Stores record data on blockchain. Tatum currently supports the Ethereum, CELO, MATIC, ONE, XDC, Quorum, BSC, EGLD and Hyperledger Fabric blockchain and Quorum to store data.<br/>
        The total cost of the transaction (in credits) on the Ethereum blockchain is dependent on the size of the data. Data are stored as a HEX string and the maximum data size is approximatelly 130 kB on mainnet, 30 kB on testnet.<br/>
        Every 5 characters of data costs 1 credit, so an API call with a data of length 1 kB = 1024 characters and would cost 205 credits.
        </p>
      operationId: StoreLog
      summary: Store log record
      tags:
        - Record
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    data:
                      type: string
                      minLength: 1
                      maxLength: 130000
                      description: Log data to be stored on a blockchain.
                      example: My example log data.
                    chain:
                      description: 'Blockchain, where to store log data.'
                      enum:
                        - ETH
                        - ONE
                        - XDC
                        - BSC
                        - KLAY
                        - MATIC
                      example: ETH
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of account, from which the transaction will be initiated. If not present, transaction fee will be debited from Tatum internal account and additional credits will be charged.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    to:
                      description: 'Blockchain address to store log on. If not defined, it will be stored on an address, from which the transaction was being made.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                  required:
                    - data
                    - chain
                - type: object
                  properties:
                    data:
                      type: string
                      minLength: 1
                      maxLength: 130000
                      description: Log data to be stored on a blockchain.
                      example: My example log data.
                    chain:
                      description: 'Blockchain, where to store log data.'
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of account, from which the transaction will be initiated. If not present, transaction fee will be debited from Tatum internal account and additional credits will be charged.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    to:
                      description: 'Blockchain address to store log on. If not defined, it will be stored on an address, from which the transaction was being made.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                  required:
                    - data
                    - feeCurrency
                    - chain
                - type: object
                  properties:
                    data:
                      type: string
                      minLength: 1
                      maxLength: 1000000000000
                      description: Log data to be stored on a blockchain.
                      example: My example log data.
                    chain:
                      description: 'Blockchain, where to store log data.'
                      enum:
                        - QUORUM
                      example: QUORUM
                      type: string
                    from:
                      description: Blockchain address to store log on from.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    to:
                      description: 'Blockchain address to store log on. If not defined, it will be stored on an address, from which the transaction was being made.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                  required:
                    - data
                    - chain
                    - from
                    - to
                - type: object
                  properties:
                    data:
                      type: string
                      minLength: 1
                      maxLength: 1000000000000
                      description: Log data to be stored on a blockchain.
                      example: My example log data.
                    chain:
                      description: 'Blockchain, where to store log data.'
                      enum:
                        - FABRIC
                      example: FABRIC
                      type: string
                    key:
                      description: 'Key, under which the data will be stored.'
                      example: key_1
                      type: string
                  required:
                    - data
                    - chain
                    - key
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  txId:
                    description: TX hash of successful transaction.
                    example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                    type: string
                required:
                  - txId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Gets log data from the Ethereum blockchain.</p>
      operationId: GetLog
      summary: Get log record
      tags:
        - Record
      parameters:
        - description: The blockchain to get the log record from
          in: query
          name: chain
          required: true
          schema:
            type: string
            example: ETH
            enum:
              - ETH
        - description: ID of the log record / transaction on the blockchain
          in: query
          name: id
          required: true
          schema:
            type: string
            example: '0x94Ce79B9F001E25BBEbE7C01998A78F7B27D1326'
            minLength: 1
            maxLength: 100
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: string
                    description: Data stored in the record.
                    example: My log record data.
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: tx.missing
                        example: tx.missing
                        type: string
                      message:
                        description: No such tx.
                        example: No such tx.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
components:
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.
      in: header
      name: x-api-key
      type: apiKey
